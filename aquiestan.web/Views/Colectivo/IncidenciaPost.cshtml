@model SinglePostWithComments<IncidenciaPost>
@{
    ViewData["Title"] = !string.IsNullOrEmpty(Model.Data.MetaTitle) ? Model.Data.MetaTitle : Model.Data.Title;
    var hasImage = Model.Data.PrimaryImage.HasValue;
    var archive = await WebApp.Api.Pages.GetByIdAsync(Model.Data.BlogId);
}
@section head {
    @WebApp.MetaTags(Model.Data)
}

<header @(hasImage ? "class=has-image" : "") @(hasImage ? $"style=background-image:url({ @Url.Content(WebApp.Media.ResizeImage(Model.Data.PrimaryImage, 1920, 400)) })" : "")>
    <div class="dimmer"></div>
    <div class="container text-center">
        <h1>@Model.Data.Title</h1>
        <p class="post-meta">
            <span>
                In <a href="@archive.Permalink/category/@Model.Data.Category.Slug">@Model.Data.Category.Title</a>
            </span>
            <span>
                Tags
                @foreach (var tag in Model.Data.Tags)
                {
                    <a href="@archive.Permalink/tag/@tag.Slug">#@tag.Slug</a>
                }
            </span>
            @if (Model.Data.IsPublished)
            {
                <span>
                    Published @Model.Data.Published.Value.ToShortDateString()
                </span>
            }
            @if (Model.Data.EnableComments && Model.Data.CommentCount > 0)
            {
                <span>
                    <a href="#comments">@Model.Data.CommentCount @(Model.Data.CommentCount == 1 ? "comment" : "comments")</a>
                </span>
            }
        </p>
    </div>
    <style>
        .incidencia-content img {
            -webkit-filter: blur(10px);
            filter: blur(10px);
        }

          .incidencia-content img:hover {
                -webkit-filter: blur(0);
                filter: blur(0);
                -webkit-transition: 1s ease-in-out;
                transition: 1s ease-in-out;
            }
        .incidencia-content{
            display:flex;
            flex-direction:row-reverse;
            justify-content: space-between;
            flex-wrap:wrap;
        }
        .incidencia-content>div{
            padding:1em;
            flex-basis:50%;
        }
        .incidencia-content>div:last-of-type{
            flex-basis:100%;
        }
        .incidencia-content label{
            margin: 0 .5em;
            font-weight: 100;
            min-width: 11em;
            text-align: end;
        }
        .incidencia-content span{
                text-shadow: 1px 1px 1px #77777777;
            }
    </style>
</header>

<main>
    @foreach (var block in Model.Data.Blocks)
    {
        <div class="block @block.CssName()">
            <div class="container">
                @Html.DisplayFor(m => block, block.GetType().Name)
            </div>
        </div>
    }
    @{
        var unique = "gallery-" + Guid.NewGuid().ToString();

        var images = Model.Data.MediaAssets;
    }
    <div class="incidencia-content">

        <div>
            @{await Html.RenderPartialAsync("_IncidenciaPartial", Model.Data.Content);}
        </div>
        <div>
            
        </div>
        <div>
            @if (images.Count > 0)
            {
                <div id="@unique" class="carousel slide gallery-block" data-ride="carousel">
                    <ol class="carousel-indicators">
                        @for (var n = 0; n < images.Count; n++)
                        {
                            <li data-target="#@unique" data-slide-to="@n" class="@(n == 0 ? "active" : "")"></li>
                        }
                    </ol>
                    <div class="carousel-inner">
                        @foreach (var item in images)
                        {
                            <div class="carousel-item @(item == images.First() ? "active" : "")">
                                <img src="@Url.Content(WebApp.Media.ResizeImage(item, 1100, 450))" class="d-block w-100">
                    </div>
                }
            </div>
            <a class="carousel-control-prev" href="#@unique" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#@unique" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
        }
        </div>
        
    </div>

  
    

    @if (Model.Data.EnableComments)
    {
        <div id="comments" class="container comments" style="display:none">
            @if (Model.Data.IsCommentsOpen)
            {
                <div class="alert alert-comment mt-2 mb-5">
                    <form asp-page-handler="SaveComment" method="post">
                        @Html.AntiForgeryToken()
                        @Html.Hidden("Id", Model.Data.Id)

                        <h3 class="mb-3">Leave a comment</h3>
                        <p class="mb-4">
                            Please note that we won't show your email to others, or use it for sending
                            unwanted emails. We will only use it to render your Gravatar image and to
                            validate you as a real person.
                        </p>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <input name="CommentAuthor" type="text" class="form-control" placeholder="Your name">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <input name="CommentEmail" type="text" class="form-control" placeholder="Your email address">
                            </div>
                        </div>
                        <div class="form-group">
                            <input name="CommentUrl" type="text" class="form-control" placeholder="An (optional) URL to your website">
                        </div>
                        <div class="form-group">
                            <textarea name="CommentBody" rows="6" class="form-control" placeholder="Your awesome comment"></textarea>
                        </div>
                        <div class="form-group text-left">
                            <button class="btn btn-success">Post Comment</button>
                        </div>
                    </form>
                </div>
            }
            @Html.DisplayFor(m => m.Comments)
        </div>
    }
</main>
